{"version":3,"file":"static/js/387.6acb3fac.chunk.js","mappings":"yPAEaA,EAAWC,EAAAA,GAAAA,GAAH,wGAORC,EAAeD,EAAAA,GAAAA,GAAH,oHAMZE,EAAQF,EAAAA,GAAAA,IAAH,iEAKLG,EAAUH,EAAAA,GAAAA,IAAH,0KAUPI,EAAWJ,EAAAA,GAAAA,EAAH,0JASRK,EAAWL,EAAAA,GAAAA,EAAH,0J,kBCarB,EAvCa,WACX,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAQA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcC,OAAOP,IAAUQ,KAAKJ,EACrC,GAAE,CAACJ,IAECG,GAKH,gCACGA,IACC,SAACV,EAAD,UACGU,EAAWM,KACV,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,cAA6BC,EAA3C,EAA6BC,aAAsBC,EAAnD,EAAmDA,GAAnD,OACE,UAACnB,EAAD,YACE,SAACC,EAAD,CACEmB,IAAKH,EAAM,UAlBT,mCAkBS,OAAkBA,GAAWI,EACxCC,IAAKN,KAEP,UAACd,EAAD,YACE,SAACC,EAAD,UAAWa,KACX,SAACZ,EAAD,UAAWW,SAPII,EADrB,MAekB,KAAb,OAAVX,QAAU,IAAVA,OAAA,EAAAA,EAAYe,UAAgB,SAACpB,EAAD,yCAvBxB,IA0BV,C,8LCjDKqB,EAAW,gCACXC,EAAU,mCACHC,EAAa,mCAAG,oGACJC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFhB,cACrBG,EADqB,yBAKpBA,EAASC,MALW,2CAAH,qDAQbC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CM,EAD9C,gCADK,cACtBH,EADsB,yBAKrBA,EAASC,KAAKG,SALO,2CAAH,sDAQdC,EAAa,mCAAG,WAAMd,GAAN,uFACJQ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDL,EADC,oBACaM,EADb,oBADI,cACrBG,EADqB,yBAKpBA,EAASC,MALW,2CAAH,sDAQblB,EAAa,mCAAG,WAAMQ,GAAN,uFACJQ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDL,EADC,4BACqBM,EADrB,oBADI,cACrBG,EADqB,yBAKpBA,EAASC,KAAKK,MALM,2CAAH,sDAQbC,EAAgB,mCAAG,WAAMhB,GAAN,uFACPQ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDL,EADC,4BACqBM,EADrB,2BADO,cACxBG,EADwB,yBAKvBA,EAASC,KAAKG,SALS,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/GetApi/FetchMovie.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 25px;\n`;\n\nexport const CastItemInfo = styled.li`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  background-color: #553322;\n`;\nexport const Image = styled.img`\n  width: 200px;\n  margin-bottom: 20px;\n`;\n\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  color: #fff;\n`;\n\nexport const CastName = styled.p`\n  display: flex;\n  justify-content: center;\n  text-decoration: none;\n  color: inherit;\n  font-size: 16px;\n  color: #ff6b08;\n`;\n\nexport const CastInfo = styled.p`\n  display: flex;\n  justify-content: center;\n  text-decoration: none;\n  color: inherit;\n  font-size: 16px;\n  color: #ff6b08;\n`;\n","import { getMoviesCast } from 'components/GetApi/FetchMovie';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CastItemInfo,\n  InfoBox,\n  CastList,\n  Image,\n  CastInfo,\n  CastName,\n} from './Cast.styled';\nimport ImageDefault from '../Error/error.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [moviesCast, setMoviesCast] = useState(null);\n\n  const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    getMoviesCast(Number(movieId)).then(setMoviesCast);\n  }, [movieId]);\n\n  if (!moviesCast) {\n    return null;\n  }\n\n  return (\n    <>\n      {moviesCast && (\n        <CastList>\n          {moviesCast.map(\n            ({ character, original_name, profile_path: avatar, id }) => (\n              <CastItemInfo key={id}>\n                <Image\n                  src={avatar ? `${IMAGE_URL}${avatar}` : ImageDefault}\n                  alt={original_name}\n                />\n                <InfoBox>\n                  <CastName>{original_name}</CastName>\n                  <CastInfo>{character}</CastInfo>\n                </InfoBox>\n              </CastItemInfo>\n            )\n          )}\n        </CastList>\n      )}\n      {moviesCast?.length === 0 && <CastName>There is no information</CastName>}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ecb4ebe4446fc4aea8082bc07d38b413';\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getSeacrhMovie = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return response.data.results;\n};\n\nexport const getMoviesInfo = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMoviesCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const getMoviesReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n"],"names":["CastList","styled","CastItemInfo","Image","InfoBox","CastName","CastInfo","movieId","useParams","useState","moviesCast","setMoviesCast","useEffect","getMoviesCast","Number","then","map","character","original_name","avatar","profile_path","id","src","ImageDefault","alt","length","BASE_URL","API_KEY","fetchTrending","axios","response","data","getSeacrhMovie","query","results","getMoviesInfo","cast","getMoviesReviews"],"sourceRoot":""}