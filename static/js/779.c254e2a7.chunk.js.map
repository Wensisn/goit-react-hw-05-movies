{"version":3,"file":"static/js/779.c254e2a7.chunk.js","mappings":"8SACMA,EAAW,gCACXC,EAAU,mCACHC,EAAa,mCAAG,oGACJC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFhB,cACrBG,EADqB,yBAKpBA,EAASC,MALW,2CAAH,qDAQbC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CM,EAD9C,gCADK,cACtBH,EADsB,yBAKrBA,EAASC,KAAKG,SALO,2CAAH,sDAQdC,EAAa,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,oBACaT,EADb,oBADI,cACrBG,EADqB,yBAKpBA,EAASC,MALW,2CAAH,sDAQbM,EAAa,mCAAG,WAAMD,GAAN,uFACJP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BACqBT,EADrB,oBADI,cACrBG,EADqB,yBAKpBA,EAASC,KAAKO,MALM,2CAAH,sDAQbC,EAAgB,mCAAG,WAAMH,GAAN,uFACPP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BACqBT,EADrB,2BADO,cACxBG,EADwB,yBAKvBA,EAASC,KAAKG,SALS,2CAAH,qD,qICjChBM,EAAWC,EAAAA,GAAAA,GAAH,0GAQRC,EAAeD,EAAAA,GAAAA,GAAH,mMAWZE,EAAaF,EAAAA,GAAAA,EAAH,wJASVG,EAAcH,EAAAA,GAAAA,GAAH,4J,SCUxB,EA9BgB,WACd,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0CE,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAiBY,OAAON,IAAUO,KAAKH,EACxC,GAAE,CAACJ,IAECG,GAKH,gCACGA,IACC,SAACR,EAAD,UACGQ,EAAcK,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASnB,EAApB,EAAoBA,GAApB,OACjB,UAACM,EAAD,YACE,SAACE,EAAD,UAAcU,KACd,SAACX,EAAD,UAAaY,MAFInB,EADF,MAQI,KAAb,OAAbY,QAAa,IAAbA,OAAA,EAAAA,EAAeQ,UACd,SAACZ,EAAD,yCAhBG,IAoBV,C","sources":["components/GetApi/FetchMovie.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ecb4ebe4446fc4aea8082bc07d38b413';\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const getSeacrhMovie = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return response.data.results;\n};\n\nexport const getMoviesInfo = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMoviesCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const getMoviesReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const CastItemInfo = styled.li`\n  min-width: 320px;\n  padding: 10px 15px;\n  border-radius: 8px;\n  background-color: #655f5c;\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const RewiesInfo = styled.p`\n  display: flex;\n  justify-content: center;\n  text-decoration: none;\n  color: inherit;\n  font-size: 16px;\n  color: #ffff;\n`;\n\nexport const RewiesTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  text-decoration: none;\n  color: inherit;\n  font-size: 30px;\n  color: firebrick;\n`;\n","import { getMoviesReviews } from 'components/GetApi/FetchMovie';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CastItemInfo,\n  CastList,\n  RewiesInfo,\n  RewiesTitle,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [moviesReviews, setMoviesReviews] = useState(null);\n\n  useEffect(() => {\n    getMoviesReviews(Number(movieId)).then(setMoviesReviews);\n  }, [movieId]);\n\n  if (!moviesReviews) {\n    return null;\n  }\n\n  return (\n    <>\n      {moviesReviews && (\n        <CastList>\n          {moviesReviews.map(({ author, content, id }) => (\n            <CastItemInfo key={id}>\n              <RewiesTitle>{author}</RewiesTitle>\n              <RewiesInfo>{content}</RewiesInfo>\n            </CastItemInfo>\n          ))}\n        </CastList>\n      )}\n      {moviesReviews?.length === 0 && (\n        <RewiesTitle>There is no information</RewiesTitle>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","fetchTrending","axios","response","data","getSeacrhMovie","query","results","getMoviesInfo","id","getMoviesCast","cast","getMoviesReviews","CastList","styled","CastItemInfo","RewiesInfo","RewiesTitle","movieId","useParams","useState","moviesReviews","setMoviesReviews","useEffect","Number","then","map","author","content","length"],"sourceRoot":""}